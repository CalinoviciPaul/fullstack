<!--
  ~ Copyright (c) 2018 Irian Software Development SRL. All Rights Reserved.
  ~ This software is the proprietary information of Irian Software Development SRL.
  ~ Use is subject to license and non-disclosure terms
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                      http://www.springframework.org/schema/tx
                      http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
       default-lazy-init="false">


    <bean id="systemPropertyConfigurator" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="properties">
            <props>
                <!--
                Default database configuration is "HSQLDB local in-memory"
                Use JVM System Property "db" to override this:
                    -Ddb=hsqldbMemory ... for "HSQLDB In-Memory configuration"
                or
                    -Ddb=postgreSQLLocal .,. for "Postgres SQL Database"
                -->
                <prop key="db">hsqldbMemory</prop>
            </props>
        </property>
        <property name="placeholderPrefix" value="^{"/>
        <property name="placeholderSuffix" value="}"/>
    </bean>

    <alias alias="dataSource"  name="^{db}.dataSource"  />
    <alias alias="jpaProps"    name="^{db}.jpaProps" />


    <bean name="hsqldbMemory.dataSource" class="org.apache.commons.dbcp.BasicDataSource" lazy-init="true" primary="true">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <!--<property type="url" value="jdbc:hsqldb:mem:.;hsqldb.tx=locks;hsqldb.tx_level=read_commited"/>-->
        <property name="url" value="jdbc:hsqldb:mem:test"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean name="postgreSQLLocal.dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="true">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql:technocer"/>
        <property name="username" value="postgres"/>
        <property name="password" value="admin"/>
    </bean>


    <!-- JPA Properties for running on HSQLDB -->
    <bean id="hsqldbJpaProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean" lazy-init="false">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.showSql" >true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.RAMDirectoryProvider</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.archive.autodetection">none</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <!--<prop key="hibernate.hbm2ddl.import_files">/META-INF/testdata.sql</prop>-->
            </props>
        </property>
    </bean>

    <bean id="postgresJpaProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean" lazy-init="false">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.showSql" >false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.RAMDirectoryProvider</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.archive.autodetection">none</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">none</prop>-->
                <!--<prop key="javax.persistence.schema-generation.scripts.action">create</prop>-->
                <!--<prop key="javax.persistence.schema-generation.scripts.create-target">technocer.ddl</prop>-->
            </props>
        </property>
    </bean>

    <alias alias="hsqldbMemory.jpaProps" name="hsqldbJpaProps"/>
    <alias alias="hsqldbServer.jpaProps" name="hsqldbJpaProps"/>
    <alias alias="postgreSQLLocal.jpaProps" name="postgresJpaProps"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="mypizza"/>
        <property name="jpaDialect"><bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/></property>
        <property name="jpaVendorAdapter"><bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/></property>
        <!--<property name="packagesToScan" value="ro.irian" />-->
        <!--suppress SpringModelInspection -->
        <property name="dataSource" ref="dataSource"/>
        <!--suppress SpringModelInspection -->
        <property name="jpaProperties" ref="jpaProps"/>
    </bean>

    <!-- JPA Platform Transaction Manager for auto -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- process the @Transactional annotations: -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- Process the @PersistenceContext and @PersistenceUnit annotations: -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <property name="defaultPersistenceUnitName" value="mypizza"/>
    </bean>

    <!-- translates Database or Hibernate specific exceptions into more generic Spring exceptions -->
    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


</beans>